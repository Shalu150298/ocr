

@import url(https://fonts.googleapis.com/css?family=Open+Sans:700,300);




.frame {
  /* Add Bootstrap container class */
  display: flex;
  justify-content: center;
  align-items: center;
  height: 50vh;
  width: auto;
  /* background: linear-gradient(45deg, #7B1FA2 50%, #F06292 90%); */
  /* background: linear-gradient(#0b6ab8, #02153a); */
}
.mic__head::after {
  content: "";
  display: inline-block;
}

.toggle-label,
.round,
.recording,
.mic__head::after,
.mic,
.svgcirccle
 {
  position: absolute;
  top: 50%;
  left: 50%;
}

input {
  display: none;
}

.svgcirccle {
  width: 130px;
  height: 130px;
  margin-top: -65px;
  margin-left: -65px;
}

.svgcirccle .circle-svg {
  stroke: #1e209f;
  stroke-width: 3;
  fill: transparent;
}

.mic {
  width: 85px;
  height: 85px;
  margin-top: -42.5px;
  margin-left: -42.5px;
  display: flex;
  flex-direction: column;
  align-items: center;
  transition: all 0.3s ease;
}

.mic__head {
  background: linear-gradient(45deg, #1e209f 50%, rgb(53, 65, 137) 50%);
  width: 25.5px;
  width: 30px;
  height: 63.75px;
  border-radius: 30px;
}

.mic__head::after {
  top: 10%;
  background: linear-gradient(#0b6ab8, #02153a);

  /* background: linear-gradient(45deg, #7B1FA2 50%, #F06292 90%); */
  width: 8px;
  height: 20px;
  border-radius: inherit;
  transform: translate(-50%);
}

.mic__neck {
  background: linear-gradient(45deg, #1e209f 50%, rgb(53, 65, 137) 50%);
  width: 4.25px;
  height: 17px;
}

.mic__leg {
  background: linear-gradient(45deg, #1e209f 50%, rgb(53, 65, 137) 50%);
  width: 25.5px;
  height: 4.25px;
  border-radius: 50px;
}

.recording {
  width: 85px;
  height: 85px;
  margin-top: -42.5px;
  margin-left: -42.5px;
  transform: scale(0.5);
  opacity: 0;
  transition: all 0.3s 0s ease;
}

.round {
  background: #1e209f;
  width: 12.75px;
  height: 12.75px;
  border-radius: 50%;
  margin-top: -6.375px;
  margin-left: -6.375px;
  -webkit-animation: recording 1s ease-in-out infinite;
  animation: recording 1s ease-in-out infinite;
  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.15);
}

.round:first-child {
  left: 20%;
}

.round:nth-child(2) {
  -webkit-animation-delay: 0.15s;
  animation-delay: 0.15s;
}

.round:last-child {
  left: 80%;
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.toggle-label {
  display: inline-block;
  width: 130px;
  height: 130px;
  margin-top: -65px;
  margin-left: -65px;
  cursor: pointer;
}

#record-toggle:checked~svg {
  -webkit-animation: spinning 3s ease-in-out infinite alternate;
  animation: spinning 3s ease-in-out infinite alternate;
}

#record-toggle:checked~svg .circle-svg {
  stroke-dasharray: 300;
  stroke-dashoffset: 300;
  -webkit-animation: dash 3s ease-in-out infinite alternate;
  animation: dash 3s ease-in-out infinite alternate;
}

#record-toggle:checked~.mic {
  transform: scale(1.128);
  -webkit-animation: gone 0.5s 0.3s ease;
  animation: gone 0.5s 0.3s ease;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

#record-toggle:checked~.recording {
  opacity: 1;
  transform: scale(0.98);
  transition-delay: 0.3s;
}

@-webkit-keyframes spinning {
  to {
      transform: rotatez(360deg);
  }
}

@keyframes spinning {
  to {
      transform: rotatez(360deg);
  }
}

@-webkit-keyframes gone {
  to {
      transform: scale(0.5);
      opacity: 0;
  }
}

@keyframes gone {
  to {
      transform: scale(0.5);
      opacity: 0;
  }
}

@-webkit-keyframes recording {
  0% {
      transform: translatey(0%);
  }

  30% {
      transform: translatey(-30%);
  }

  60% {
      transform: translatey(30%);
  }

  90% {
      transform: translatey(0%);
  }
}

@keyframes recording {
  0% {
      transform: translatey(0%);
  }

  30% {
      transform: translatey(-30%);
  }

  60% {
      transform: translatey(30%);
  }

  90% {
      transform: translatey(0%);
  }
}

@-webkit-keyframes dash {
  from {
      stroke-dashoffset: 300;
  }

  to {
      stroke-dashoffset: 0;
  }
}

@keyframes dash {
  from {
      stroke-dashoffset: 300;
  }

  to {
      stroke-dashoffset: 0;
  }
}


/* ... (paste the previous CSS code here) ... */

/* Add stop button styles */
.stop-label {
  display: inline-block;
  width: 130px;
  height: 130px;
  margin-top: -65px;
  margin-left: -65px;
  cursor: pointer;
  background-color: #d32f2f;
  border-radius: 50%;
  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.15);
  transition: background-color 0.2s;
}

/* Style the inner X symbol for the stop button */



/* When the stop button is active, change its background color */
.stop-label.stop {
  background-color: #b71c1c;
}

/* Style the recording timer */
#recording-timer {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 24px;
  margin-top: 10px;
  color: #1e209f;
}


.service-buttons {
    overflow: hidden;
    border: 1px solid #79929d;
    border-radius: 8px;
    padding: 7px 7px 7px 8px;
    background: #ffffff;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    box-shadow: 0 1px 3px #00000014;
    display: inline-block;
}

.service-buttons:hover {
  text-decoration: none;
  border-color: #0970ac;
  background-color: #f7f9f9;
}

.service-buttons-active {
  border: 1px solid #79929d;
  box-shadow: none;
}


.service-buttons-detail {
  color: #3b4c55;
  font-size: 14px;
  font-style: normal;
  font-weight: 500;
  line-height: 20px;
  letter-spacing: 0;
}